package com.ccm.mzjhapp.ws.shmj.lisris;


import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 2.7.3
 * 2018-07-02T10:24:56.854+08:00
 * Generated source version: 2.7.3
 * 
 */
@WebServiceClient(name = "ILisRisReportWsService", 
                  wsdlLocation = "http://42.159.239.54:28080/eHealth/services/ILisRisReportWsService?wsdl",
                  targetNamespace = "http://webservice.datong.webservice.server.ehealth.kompakar.com") 
public class ILisRisReportWsServiceSH extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://webservice.datong.webservice.server.ehealth.kompakar.com", "ILisRisReportWsService");
    public final static QName ILisRisReportWsServiceHttpPort = new QName("http://webservice.datong.webservice.server.ehealth.kompakar.com", "ILisRisReportWsServiceHttpPort");
    static {
        URL url = null;
        try {
            url = new URL("http://42.159.239.54:28080/eHealth/services/ILisRisReportWsService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ILisRisReportWsServiceSH.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://42.159.239.54:28080/eHealth/services/ILisRisReportWsService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ILisRisReportWsServiceSH(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ILisRisReportWsServiceSH(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ILisRisReportWsServiceSH() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     *
     * @return
     *     returns ILisRisReportWsServicePortType
     */
    @WebEndpoint(name = "ILisRisReportWsServiceHttpPort")
    public ILisRisReportWsServicePortTypeSH getILisRisReportWsServiceHttpPort() {
        return super.getPort(ILisRisReportWsServiceHttpPort, ILisRisReportWsServicePortTypeSH.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ILisRisReportWsServicePortType
     */
    @WebEndpoint(name = "ILisRisReportWsServiceHttpPort")
    public ILisRisReportWsServicePortTypeSH getILisRisReportWsServiceHttpPort(WebServiceFeature... features) {
        return super.getPort(ILisRisReportWsServiceHttpPort, ILisRisReportWsServicePortTypeSH.class, features);
    }

}
