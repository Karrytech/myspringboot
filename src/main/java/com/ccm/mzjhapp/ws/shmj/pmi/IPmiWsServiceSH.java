package com.ccm.mzjhapp.ws.shmj.pmi;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 2.7.3
 * 2018-07-02T10:25:15.491+08:00
 * Generated source version: 2.7.3
 * 
 */
@WebServiceClient(name = "IPmiWsService", 
                  wsdlLocation = "http://42.159.239.54:28080/eHealth/services/IPmiWsService?wsdl",
                  targetNamespace = "http://wsservice.integratedservices.webservice.server.ehealth.kompakar.com") 
public class IPmiWsServiceSH extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://wsservice.integratedservices.webservice.server.ehealth.kompakar.com", "IPmiWsService");
    public final static QName IPmiWsServiceHttpPort = new QName("http://wsservice.integratedservices.webservice.server.ehealth.kompakar.com", "IPmiWsServiceHttpPort");
    static {
        URL url = null;
        try {
            url = new URL("http://42.159.239.54:28080/eHealth/services/IPmiWsService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(IPmiWsServiceSH.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://42.159.239.54:28080/eHealth/services/IPmiWsService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public IPmiWsServiceSH(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public IPmiWsServiceSH(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IPmiWsServiceSH() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns IPmiWsServicePortType
     */
    @WebEndpoint(name = "IPmiWsServiceHttpPort")
    public IPmiWsServicePortTypeSH getIPmiWsServiceHttpPort() {
        return super.getPort(IPmiWsServiceHttpPort, IPmiWsServicePortTypeSH.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IPmiWsServicePortType
     */
    @WebEndpoint(name = "IPmiWsServiceHttpPort")
    public IPmiWsServicePortTypeSH getIPmiWsServiceHttpPort(WebServiceFeature... features) {
        return super.getPort(IPmiWsServiceHttpPort, IPmiWsServicePortTypeSH.class, features);
    }

}
